import { Nobody } from "./nobody";
import { SignedInUser } from "./signedInUser";
import { Service } from "./service";
/** 
 * ``` 
 * 一般的なサインイン機能を持つシステムにおけるユーザーの状態遷移には、いくつかの典型的なパターンがあります。これらはシステムのセキュリティ、ユーザビリティ、およびアカウント管理ポリシーに基づいて変わることがあります。以下に主なパターンを示します：
 * 
 * ### 1. アカウント作成
 * - **未登録状態 → 登録済み状態**: 新しいユーザーがアカウントを作成し、システムに登録されるプロセス。
 * 
 * ### 2. アカウント認証
 * - **未認証状態 → 認証済み状態**: ユーザーがログインしてシステムにアクセスする際に行われる認証プロセス。
 * 
 * ### 3. アカウントアクティベーション
 * - **非アクティブ状態 → アクティブ状態**: アカウントが作成された後、メール確認などの手順を経てアカウントがアクティブ化されるプロセス。
 * 
 * ### 4. パスワードリセット
 * - **通常状態 → パスワードリセット要求状態 → パスワード変更済み状態**: ユーザーがパスワードを忘れた場合やセキュリティ上の理由でパスワードをリセットするプロセス。
 * 
 * ### 5. アカウントロック
 * - **アクティブ状態 → ロック状態**: 認証失敗が連続するなど、セキュリティ上の理由でアカウントが一時的にロックされる状態。
 * 
 * ### 6. アカウントサスペンド（一時停止）
 * - **アクティブ状態 → サスペンド状態**: 不正行為や利用規約違反などでアカウントが一時的に利用停止される状態。
 * 
 * ### 7. アカウント復活
 * - **ロック/サスペンド状態 → アクティブ状態**: アカウントロックやサスペンドから復活し、通常の使用が可能になる状態。
 * 
 * ### 8. アカウント削除
 * - **アクティブ状態 → 削除済み状態**: ユーザーがアカウントを削除するか、管理者がアカウントを削除するプロセス。
 * 
 * これらの状態遷移は、システムのニーズや設計に応じてカスタマイズされることが一般的です。また、セキュリティ、ユーザーエクスペリエンス、コンプライアンスの要件によっても異なります。
 * ```
 */
enum UserState {
    Unregistered,           // 未登録状態
    Registered,             // 登録済み状態
    Unauthenticated,        // 未認証状態
    Authenticated,          // 認証済み状態
    Inactive,               // 非アクティブ状態
    Active,                 // アクティブ状態
    PasswordResetRequested, // パスワードリセット要求状態
    PasswordChanged,        // パスワード変更済み状態
    Locked,                 // ロック状態
    Suspended,              // サスペンド状態
    Reactivated,            // 復活状態
    Deleted                 // 削除済み状態
}

export type Actor = Nobody | SignedInUser | Service;